/*
逆波兰表达式求值
创建栈
整数依次入栈
遇到运算符时，将上一个整数和上上个整数出栈，两者运算
压入栈

*/


class Solution {
    public int evalRPN(String[] tokens) {
        int n = tokens.length;
        int[] stack = new int[(n+1)/2];
        int index = -1;
        for(int i = 0; i < n; i++){
            String token = tokens[i];
            switch(token){
                case "+":
                    stack[index-1]+=stack[index];
                    index--;
                    break;
                case "-":
                    stack[index-1]-=stack[index];
                    index--;
                    break;
                case "*":
                    stack[index-1]*=stack[index];
                    index--;
                    break;
                case "/":
                    stack[index-1]/=stack[index];
                    index--;
                    break;
                default :
                    index++;
                    stack[index] = Integer.parseInt(token);

            }
        }
        return stack[index];

    }
}
